* Implementation
:PROPERTIES:
:CUSTOM_ID: implementation
:END:
| [[file:Introduction.md][â—€ Previous]] | [[file:README.md][Back to TOC]] |
|--------------------------------------+---------------------------------|

This chapter describes how the project was built. It talks in depth of
the implementation performed to give a better understanding of the
project.

** Programming langauge used
:PROPERTIES:
:CUSTOM_ID: programming-langauge-used
:END:
The programming language used for this project was
[[https://go.dev/][Golang]]. The reason Go lang was chosen was because
it is a compiled language. The entire codebase is just a single binary
file. When distributing to other linux distributing the only requirement
would be the binary file to run the code. It is easy to write
independant modules and be monolithic at the sametime using Go. Using
Go.mod makes it very easy to handle external libraries and modularise
code. The go.mod name for the project is
[[https://git.sr.ht/~akilan1999/p2p-rendering-computation][git.sr.ht/~akilan1999/p2p-rendering-computation]].

- 
  ** [[file:CliImplementation.md][Cli Module]]
  :PROPERTIES:
  :CUSTOM_ID: cli-module
  :END:

- 
  ** [[file:ConfigImplementation.md][Config Module]]
  :PROPERTIES:
  :CUSTOM_ID: config-module
  :END:

- 
  ** [[file:ServerImplementation.md][Server Module]]
  :PROPERTIES:
  :CUSTOM_ID: server-module
  :END:

- 
  ** [[file:ClientImplementation.md][Client Module]]
  :PROPERTIES:
  :CUSTOM_ID: client-module
  :END:

- 
  ** [[file:P2PImplementation.md][P2P Module]]
  :PROPERTIES:
  :CUSTOM_ID: p2p-module
  :END:

- 
  ** [[file:PluginImplementation.md][Plugin Module]]
  :PROPERTIES:
  :CUSTOM_ID: plugin-module
  :END:

- 
  ** [[file:GenerateImplementation.md][Generate Module]]
  :PROPERTIES:
  :CUSTOM_ID: generate-module
  :END:
